# Documentación Redirección http-https:
# https://doc.traefik.io/traefik/migration/v1-to-v2/#http-to-https-redirection-is-now-configured-on-routers
# código ejemplo:
# https://www.youtube.com/watch?v=naCHq6sMMI8

version: "3.3"

services:


  proxy:
    image: opendx/nginx
    container_name: ${NGINX_NAME}
    build:
      context: ./proxy
    ports:
      - "80:80"
    expose:
      - "80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
#      - ./proxy/web/index.html:/usr/share/nginx/html/index.html
    command: [ nginx-debug, '-g', 'daemon off;' ]

  openldap:
    image: osixia/openldap:develop-dev
    container_name: ${OPENLDAP_NAME}
#    domainname: "opendx.org"
#    hostname: "ldap-server"
    ports:
      - "389:389"
    expose:
      - "389"
    volumes:
      - ./data/certificates:/container/service/slapd/assets/certs
      - ./data/slapd/database:/var/lib/ldap
      - ./data/slapd/config:/etc/ldap/slapd.d
      - ./users:/home/users

    environment:
      - LDAP_ORGANISATION=opendx
      - LDAP_DOMAIN=opendx.org
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=admin_pass
      - LDAP_CONFIG_PASSWORD=config_pass
      - "LDAP_BASE_DN=dc=opendx,dc=org"
      - LDAP_TLS_VERIFY_CLIENT=try # https://github.com/osixia/docker-openldap/issues/105 solo en development
      - LDAP_TLS_CRT_FILENAME=server.crt
      - LDAP_TLS_KEY_FILENAME=server.key
      - LDAP_TLS_CA_CRT_FILENAME=opendx.org.ca.crt
      - LDAP_READONLY_USER=true
      - LDAP_READONLY_USER_USERNAME=user-ro
      - LDAP_READONLY_USER_PASSWORD=ro_pass


  3dslicer-hub:
    image: opendx/tslicerh
    container_name: ${TDSLICERHUB_NAME}
    build:
      context: .
    expose:
      - "80"
    volumes:
      - ./tsliceh:/app/tsliceh
      - /var/run/docker.sock:/var/run/docker.sock
      - ./proxy/nginx.conf:/app/proxy/nginx.conf
      - ./tsliceh.env:/app/.env
    environment:
      - PYTHONUNBUFFERED=1

#  slicer_1:
#    image: stevepieper/slicer-chronicle:4.10.2
#    volumes:
#      - slicer-storage_1:/var/cache/apt
#    ports:
#      - "8080:8080"
#    expose:
#      - "8080"
